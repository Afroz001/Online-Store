{"ast":null,"code":"const CartReducer = (state = [], action) => {\n  let newState;\n\n  switch (action.type) {\n    case 'ADD_ITEM':\n      if (state.find(item => item.id === action.item.id && item.category === action.item.category) === undefined) {\n        return [...state, Object.assign(action.item, {\n          count: 1\n        })];\n      } else {\n        newState = Array.from(Object.create(state));\n        newState.find(item => item.id === action.item.id && item.category === action.item.category).count += 1;\n        return newState;\n      }\n\n    case 'CLEAR_CART':\n      newState = [];\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nexport default CartReducer;","map":{"version":3,"sources":["/Users/steutama/Documents/Documents/team19/react_app/src/redux/reducers/CartReducer.js"],"names":["CartReducer","state","action","newState","type","find","item","id","category","undefined","Object","assign","count","Array","from","create"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACxC,MAAIC,QAAJ;;AACA,UAAOD,MAAM,CAACE,IAAd;AACI,SAAK,UAAL;AACI,UAAGH,KAAK,CAACI,IAAN,CAAWC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EAAxB,IACbD,IAAI,CAACE,QAAL,KAAkBN,MAAM,CAACI,IAAP,CAAYE,QADlC,MACgDC,SADnD,EAC8D;AAC1D,eAAO,CAAC,GAAGR,KAAJ,EAAUS,MAAM,CAACC,MAAP,CAAcT,MAAM,CAACI,IAArB,EAA2B;AAACM,UAAAA,KAAK,EAAC;AAAP,SAA3B,CAAV,CAAP;AACH,OAHD,MAGO;AACHT,QAAAA,QAAQ,GAAGU,KAAK,CAACC,IAAN,CAAWJ,MAAM,CAACK,MAAP,CAAcd,KAAd,CAAX,CAAX;AAEAE,QAAAA,QAAQ,CAACE,IAAT,CAAcC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EAAxB,IACbD,IAAI,CAACE,QAAL,KAAkBN,MAAM,CAACI,IAAP,CAAYE,QADrC,EAC+CI,KAD/C,IACwD,CADxD;AAEA,eAAOT,QAAP;AACH;;AACL,SAAK,YAAL;AACIA,MAAAA,QAAQ,GAAG,EAAX;AACA,aAAOA,QAAP;;AACJ;AACI,aAAOF,KAAP;AAhBR;AAkBH,CApBD;;AAsBA,eAAeD,WAAf","sourcesContent":["const CartReducer = (state = [], action) => {\n    let newState;\n    switch(action.type){\n        case 'ADD_ITEM':\n            if(state.find(item=>item.id === action.item.id\n                && item.category === action.item.category) === undefined) {\n                return [...state,Object.assign(action.item, {count:1})]\n            } else {\n                newState = Array.from(Object.create(state));\n\n                newState.find(item=>item.id === action.item.id\n                    && item.category === action.item.category).count += 1;\n                return newState;\n            }\n        case 'CLEAR_CART':\n            newState = [];\n            return newState;\n        default:\n            return state\n    }\n}\n\nexport default CartReducer"]},"metadata":{},"sourceType":"module"}