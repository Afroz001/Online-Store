{"ast":null,"code":"var _jsxFileName = \"/Users/steutama/Documents/Documents/team19/react_app/src/components/AccountProfile/AccountOrders.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, Header, Icon, Message } from \"semantic-ui-react\";\nimport \"./AccountOrder.css\";\n\nclass AccountOrders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formatDate = date => {\n      let d = new Date(date);\n      return \"\".concat(d.getDate(), \"/\").concat(d.getMonth() + 1, \"/\").concat(d.getFullYear());\n    };\n\n    this.getOrderTotal = id => {\n      const singleOrder = this.state.ordersList.find(order => order.id === id);\n      let orderTotal = 0;\n      singleOrder.items.forEach(item => {\n        orderTotal = orderTotal + item.currentUnitPrice * item.quantity;\n      });\n      return orderTotal;\n    };\n\n    this.state = {\n      userId: null,\n      firstName: \"default\",\n      lastName: \"default\",\n      email: \"default\",\n      ordersList: []\n    };\n  }\n\n  getUserOrder() {\n    // console.log(this.state.userId);\n    fetch(\"http://localhost:3001/api/orders/\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        userId: this.state.userId\n      }\n    }).then(response => response.json()).then(json => {\n      // console.log(json.length);\n      this.setState({\n        ordersList: json\n      });\n    });\n  }\n\n  componentDidMount() {\n    // console.log(this.props.userId);\n    // console.log(this.props.match.params.profileId);\n    fetch(\"http://localhost:3001/api/profile\", {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(response => response.json()).then(json => {\n      if (json === null) {//   this.props.history.push(\"/login\");\n      } else {\n        this.setState({\n          userId: json._id,\n          firstName: json.firstName,\n          lastName: json.lastName,\n          email: json.email\n        });\n      }\n    });\n  }\n\n  render() {\n    this.getUserOrder();\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"CardText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"My Orders\"), this.state.ordersList.map(order => {\n      return React.createElement(\"div\", {\n        className: \"Order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"OrderHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, order.id)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, order.items.map(item => React.createElement(\"div\", {\n        key: item.itemId,\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: \"5px 0\",\n          borderBottom: \"1px solid #cecece\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"odtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, item.itemName), React.createElement(\"div\", {\n        style: {\n          fontSize: \"14px\",\n          color: \"#555\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Quantity: \", item.quantity), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"$\", item.currentUnitPrice * item.quantity)))))), React.createElement(\"div\", {\n        className: \"OrderFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Ordered On \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.formatDate(order.orderDate))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Order Total \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"$\", this.getOrderTotal(order.id)))));\n    }))));\n  }\n\n}\n\nexport default AccountOrders;","map":{"version":3,"sources":["/Users/steutama/Documents/Documents/team19/react_app/src/components/AccountProfile/AccountOrders.js"],"names":["React","Component","Button","withRouter","Grid","Header","Icon","Message","AccountOrders","constructor","props","formatDate","date","d","Date","getDate","getMonth","getFullYear","getOrderTotal","id","singleOrder","state","ordersList","find","order","orderTotal","items","forEach","item","currentUnitPrice","quantity","userId","firstName","lastName","email","getUserOrder","fetch","method","credentials","headers","then","response","json","setState","componentDidMount","_id","render","map","itemId","display","alignItems","margin","borderBottom","itemName","fontSize","color","fontWeight","orderDate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, Header, Icon, Message } from \"semantic-ui-react\";\nimport \"./AccountOrder.css\";\n\nclass AccountOrders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: null,\n      firstName: \"default\",\n      lastName: \"default\",\n      email: \"default\",\n      ordersList: []\n    };\n  }\n\n  getUserOrder() {\n    // console.log(this.state.userId);\n    fetch(\"http://localhost:3001/api/orders/\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        userId: this.state.userId\n      }\n    })\n      .then(response => response.json())\n      .then(json => {\n        // console.log(json.length);\n        this.setState({ ordersList: json });\n      });\n  }\n  componentDidMount() {\n    // console.log(this.props.userId);\n    // console.log(this.props.match.params.profileId);\n    fetch(\"http://localhost:3001/api/profile\", {\n      method: \"GET\",\n      credentials: \"include\"\n    })\n      .then(response => response.json())\n      .then(json => {\n        if (json === null) {\n          //   this.props.history.push(\"/login\");\n        } else {\n          this.setState({\n            userId: json._id,\n            firstName: json.firstName,\n            lastName: json.lastName,\n            email: json.email\n          });\n        }\n      });\n  }\n  formatDate = date => {\n    let d = new Date(date);\n    return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n  };\n\n  getOrderTotal = id => {\n    const singleOrder = this.state.ordersList.find(order => order.id === id);\n    let orderTotal = 0;\n    singleOrder.items.forEach(item => {\n      orderTotal = orderTotal + item.currentUnitPrice * item.quantity;\n    });\n\n    return orderTotal;\n  };\n  render() {\n    this.getUserOrder();\n    return (\n      <React.Fragment>\n        <Header />\n        <div className=\"Content\">\n          <div className=\"Card\">\n            <p className=\"CardText\">My Orders</p>\n\n            {this.state.ordersList.map(order => {\n              return (\n                <div className=\"Order\">\n                  <div className=\"OrderHeader\">\n                    <a href=\"#\">{order.id}</a>\n                  </div>\n                  <div>\n                    {order.items.map(item => (\n                      <div\n                        key={item.itemId}\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          margin: \"5px 0\",\n                          borderBottom: \"1px solid #cecece\"\n                        }}\n                      >\n                        <div>\n                          <p className=\"odtitle\">{item.itemName}</p>\n                          <div\n                            style={{\n                              fontSize: \"14px\",\n                              color: \"#555\",\n                              fontWeight: \"bold\"\n                            }}\n                          >\n                            <p>Quantity: {item.quantity}</p>\n                            <p>${item.currentUnitPrice * item.quantity}</p>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  <div className=\"OrderFooter\">\n                    <p>\n                      Ordered On <span>{this.formatDate(order.orderDate)}</span>\n                    </p>\n                    <p>\n                      Order Total <span>${this.getOrderTotal(order.id)}</span>\n                    </p>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AccountOrders;\n"]},"metadata":{},"sourceType":"module"}