{"ast":null,"code":"var _jsxFileName = \"/Users/steutama/Documents/Documents/team19/react_app/src/components/AdminPage/OrderTable.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst columns = [{\n  id: \"name\",\n  label: \"Name\",\n  minWidth: 170\n}, {\n  id: \"code\",\n  label: \"ISO\\u00a0Code\",\n  minWidth: 100\n}, {\n  id: \"population\",\n  label: \"Population\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toLocaleString()\n}, {\n  id: \"size\",\n  label: \"Size\\u00a0(km\\u00b2)\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toLocaleString()\n}, {\n  id: \"density\",\n  label: \"Density\",\n  minWidth: 170,\n  align: \"right\",\n  format: value => value.toFixed(2)\n}];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return {\n    name,\n    code,\n    population,\n    size,\n    density\n  };\n}\n\nconst rows = [createData(\"India\", \"IN\", 1324171354, 3287263), createData(\"China\", \"CN\", 1403500365, 9596961), createData(\"Italy\", \"IT\", 60483973, 301340), createData(\"United States\", \"US\", 327167434, 9833520), createData(\"Canada\", \"CA\", 37602103, 9984670), createData(\"Australia\", \"AU\", 25475400, 7692024), createData(\"Germany\", \"DE\", 83019200, 357578), createData(\"Ireland\", \"IE\", 4857000, 70273), createData(\"Mexico\", \"MX\", 126577691, 1972550), createData(\"Japan\", \"JP\", 126317000, 377973), createData(\"France\", \"FR\", 67022000, 640679), createData(\"United Kingdom\", \"GB\", 67545757, 242495), createData(\"Russia\", \"RU\", 146793744, 17098246), createData(\"Nigeria\", \"NG\", 200962417, 923768), createData(\"Brazil\", \"BR\", 210147125, 8515767)];\n\nclass OrderTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangePage = (event, newPage) => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        page: 0,\n        rowsPerPage: +event.target.value\n      });\n    };\n\n    this.state = {\n      page: 0,\n      rowsPerPage: 5,\n      userData: []\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"http://localhost:3001/api/orders/\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        userId: this.props.userId\n      }\n    }).then(response => {\n      this.setState({\n        data: response\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(Paper, {\n      className: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: {\n        maxHeight: 440,\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Table, {\n      stickyHeader: true,\n      \"aria-label\": \"sticky table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, columns.map(column => React.createElement(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, column.label)))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, rows.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(row => {\n      return React.createElement(TableRow, {\n        hover: true,\n        role: \"checkbox\",\n        tabIndex: -1,\n        key: row.code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, columns.map(column => {\n        const value = row[column.id];\n        return React.createElement(TableCell, {\n          key: column.id,\n          align: column.align,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, column.format && typeof value === \"number\" ? column.format(value) : value);\n      }));\n    })))), React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 15],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: this.state.rowsPerPage,\n      page: this.state.page,\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default OrderTable;","map":{"version":3,"sources":["/Users/steutama/Documents/Documents/team19/react_app/src/components/AdminPage/OrderTable.js"],"names":["React","makeStyles","Paper","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","OrderTable","Component","constructor","props","handleChangePage","event","newPage","setState","page","handleChangeRowsPerPage","rowsPerPage","target","state","userData","componentWillMount","fetch","method","credentials","headers","userId","then","response","data","render","width","maxHeight","overflow","map","column","slice","row","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst columns = [\n  { id: \"name\", label: \"Name\", minWidth: 170 },\n  { id: \"code\", label: \"ISO\\u00a0Code\", minWidth: 100 },\n  {\n    id: \"population\",\n    label: \"Population\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"size\",\n    label: \"Size\\u00a0(km\\u00b2)\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toLocaleString()\n  },\n  {\n    id: \"density\",\n    label: \"Density\",\n    minWidth: 170,\n    align: \"right\",\n    format: value => value.toFixed(2)\n  }\n];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return { name, code, population, size, density };\n}\n\nconst rows = [\n  createData(\"India\", \"IN\", 1324171354, 3287263),\n  createData(\"China\", \"CN\", 1403500365, 9596961),\n  createData(\"Italy\", \"IT\", 60483973, 301340),\n  createData(\"United States\", \"US\", 327167434, 9833520),\n  createData(\"Canada\", \"CA\", 37602103, 9984670),\n  createData(\"Australia\", \"AU\", 25475400, 7692024),\n  createData(\"Germany\", \"DE\", 83019200, 357578),\n  createData(\"Ireland\", \"IE\", 4857000, 70273),\n  createData(\"Mexico\", \"MX\", 126577691, 1972550),\n  createData(\"Japan\", \"JP\", 126317000, 377973),\n  createData(\"France\", \"FR\", 67022000, 640679),\n  createData(\"United Kingdom\", \"GB\", 67545757, 242495),\n  createData(\"Russia\", \"RU\", 146793744, 17098246),\n  createData(\"Nigeria\", \"NG\", 200962417, 923768),\n  createData(\"Brazil\", \"BR\", 210147125, 8515767)\n];\n\nclass OrderTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n      rowsPerPage: 5,\n      userData: []\n    };\n  }\n\n  handleChangePage = (event, newPage) => {\n    this.setState({\n      page: newPage\n    })\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({\n      page: 0,\n      rowsPerPage: +event.target.value\n    })\n  };\n\n  componentWillMount(){\n    fetch(\"http://localhost:3001/api/orders/\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        userId: this.props.userId\n      }\n    })\n      .then(response => {\n        this.setState({\n          data: response\n        })\n      });\n  }\n  \n  render() {\n    return (\n      <Paper\n        className={{\n          width: \"100%\"\n        }}\n      >\n        <div\n          className={{\n            maxHeight: 440,\n            overflow: \"auto\"\n          }}\n        >\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                {columns.map(column => (\n                  <TableCell\n                    key={column.id}\n                    align={column.align}\n                    style={{ minWidth: column.minWidth }}\n                  >\n                    {column.label}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows\n                .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n                .map(row => {\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      tabIndex={-1}\n                      key={row.code}\n                    >\n                      {columns.map(column => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {column.format && typeof value === \"number\"\n                              ? column.format(value)\n                              : value}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 15]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={this.state.rowsPerPage}\n          page={this.state.page}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\nexport default OrderTable;\n"]},"metadata":{},"sourceType":"module"}