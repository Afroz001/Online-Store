{"ast":null,"code":"var _jsxFileName = \"/Users/steutama/Documents/Documents/team19/react_app/src/components/ShoppingCartBar/ShoppingCartBar.js\";\nimport React, { Component, Fragment } from \"react\";\nimport Badge from \"@material-ui/core/Badge/Badge\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport './ShoppingCartBar.css';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Drawer, ListItemText, Typography } from \"@material-ui/core\";\nimport { TOGGLE_CART_DRAWER } from \"../../redux/actions\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart,\n    cartDrawerVisible: state.cartDrawerVisible\n  };\n};\n\nclass ShoppingCartBar extends Component {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n    this.toggleDrawer = this.toggleDrawer.bind(this);\n  }\n\n  onClick() {\n    this.props.history.push('/checkout');\n    this.toggleDrawer();\n  }\n\n  toggleDrawer() {\n    this.props.dispatch(TOGGLE_CART_DRAWER());\n  }\n\n  render() {\n    console.log(this.props.cart);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.toggleDrawer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      badgeContent: this.props.cart.reduce((a, b) => a + (b['count'] || 0), 0),\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(ShoppingCartIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))), React.createElement(Drawer, {\n      anchor: 'right',\n      open: this.props.cartDrawerVisible,\n      onClose: this.toggleDrawer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"shoppingCartHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      align: \"center\",\n      color: \"textPrimary\",\n      display: \"block\",\n      gutterBottom: true,\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(ShoppingCartIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Cart\"))), React.createElement(\"div\", {\n      style: {\n        overflow: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.cart.map(item => {\n      return React.createElement(Fragment, {\n        key: item.category + item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        key: item.category + item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"shoppingCartImages\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"cartImg\",\n        src: item.imageUrls,\n        alt: '',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"shoppingCartItemNames\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: item.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"shoppingCartCount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: 'Ct. ' + item.count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }))), React.createElement(\"div\", {\n      style: {\n        display: this.props.cart.length <= 0 ? \"none\" : \"flex\"\n      },\n      className: \"checkoutButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Checkout: $\", this.props.cart.reduce((a, b) => a + (b['price'] * b['count'] || 0), 0)))));\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps)(ShoppingCartBar));","map":{"version":3,"sources":["/Users/steutama/Documents/Documents/team19/react_app/src/components/ShoppingCartBar/ShoppingCartBar.js"],"names":["React","Component","Fragment","Badge","ShoppingCartIcon","IconButton","withRouter","connect","Drawer","ListItemText","Typography","TOGGLE_CART_DRAWER","ListItem","List","Divider","Button","mapStateToProps","state","cart","cartDrawerVisible","ShoppingCartBar","constructor","props","onClick","bind","toggleDrawer","history","push","dispatch","render","console","log","reduce","a","b","overflow","map","item","category","id","imageUrls","name","count","display","length"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from \"react\";\nimport Badge from \"@material-ui/core/Badge/Badge\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport './ShoppingCartBar.css'\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {Drawer, ListItemText, Typography} from \"@material-ui/core\";\nimport {TOGGLE_CART_DRAWER} from \"../../redux/actions\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\n\nconst mapStateToProps = state => {\n    return{\n        cart: state.cart,\n        cartDrawerVisible: state.cartDrawerVisible\n    };\n};\n\nclass ShoppingCartBar extends Component {\n    constructor(props) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n        this.toggleDrawer = this.toggleDrawer.bind(this);\n    }\n\n\n\n    onClick() {\n        this.props.history.push('/checkout')\n        this.toggleDrawer()\n    }\n\n    toggleDrawer() {\n        this.props.dispatch(TOGGLE_CART_DRAWER())\n    }\n\n    render() {\n        console.log(this.props.cart)\n        return (\n            <div>\n            <IconButton onClick={this.toggleDrawer}>\n                {/* change badgecontent to number of items in cart */}\n                <Badge badgeContent={\n                    this.props.cart.reduce((a,b) => a + (b['count'] || 0), 0)\n                } color=\"primary\">\n                    <ShoppingCartIcon/>\n                </Badge>\n            </IconButton>\n                <Drawer anchor={'right'} open={this.props.cartDrawerVisible}\n                        onClose={this.toggleDrawer}>\n                    <div className='shoppingCartHeader'>\n                        <Typography align={\"center\"} color={\"textPrimary\"} display={\"block\"} gutterBottom={true} variant='h4'>\n                            <ShoppingCartIcon />\n                            <span >\n                                Cart\n                            </span>\n                        </Typography>\n                    </div>\n                    <div style={{overflow : 'auto'}}>\n                    <List>{\n                        this.props.cart.map(item => {\n                                return(\n                                    <Fragment key={item.category + item.id}>\n                                        <ListItem key={item.category + item.id}>\n                                            <span className='shoppingCartImages'>\n                                                <img className=\"cartImg\" src={item.imageUrls} alt={''}/>\n                                            </span>\n                                            <span className='shoppingCartItemNames'>\n                                                <ListItemText primary={item.name}/>\n                                            </span>\n                                            <span className='shoppingCartCount'>\n                                                <ListItemText primary={'Ct. ' + item.count}/>\n                                            </span>\n                                        </ListItem>\n                                        <Divider/>\n                                    </Fragment>\n                                );\n                            })\n                        }\n                    </List>\n                    </div>\n                    <div style={{display: this.props.cart.length <= 0? \"none\" : \"flex\"}} className='checkoutButton'>\n                        <Button variant=\"outlined\" color='primary' onClick={this.onClick}>\n                            Checkout: ${ this.props.cart.reduce((a,b) => a + (b['price']*b['count'] || 0), 0)}\n                        </Button>\n                    </div>\n                </Drawer>\n            </div>\n        );\n    }\n}\nexport default withRouter(connect(mapStateToProps)(ShoppingCartBar));\n"]},"metadata":{},"sourceType":"module"}