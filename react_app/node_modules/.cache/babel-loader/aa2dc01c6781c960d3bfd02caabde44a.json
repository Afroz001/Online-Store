{"ast":null,"code":"var _jsxFileName = \"/Users/steutama/Documents/Documents/team19/react_app/src/components/AccountProfile/AccountOrders.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, Header, Icon, Message } from \"semantic-ui-react\";\nimport \"./AccountOrder.css\";\n\nclass AccountOrders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.formatDate = date => {\n      let d = new Date(date);\n      return \"\".concat(d.getDate(), \"/\").concat(d.getMonth() + 1, \"/\").concat(d.getFullYear());\n    };\n\n    this.getOrderTotal = id => {\n      const singleOrder = this.state.ordersList.find(order => order.id === id);\n      let orderTotal = 0;\n      singleOrder.items.forEach(item => {\n        //   console.log(item.quantity);\n        orderTotal = orderTotal + item.currentUnitPrice * item.quantity;\n      });\n      return orderTotal;\n    };\n\n    this.state = {\n      userId: null,\n      firstName: \"default\",\n      lastName: \"default\",\n      email: \"default\",\n      fail: false,\n      ordersList: []\n    };\n  }\n\n  getUserOrder() {\n    // console.log(this.state.userId);\n    fetch(\"http://localhost:3001/api/orders/\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        userId: this.state.userId\n      }\n    }).then(response => response.json()).then(json => {\n      this.setState({\n        ordersList: json\n      });\n      console.log(this.state.ordersList.length); // console.log(json.length);\n      // if (json.length > 0) {\n      //   this.setState({ ordersList: json });\n      // } else {\n      //   this.setState({ fail: true });\n      // } // console.log(json);\n    });\n  }\n\n  componentDidMount() {\n    // console.log(this.props.userId);\n    // console.log(this.props.match.params.profileId);\n    fetch(\"http://localhost:3001/api/profile\", {\n      method: \"GET\",\n      credentials: \"include\"\n    }).then(response => response.json()).then(json => {\n      if (json === null) {//   this.props.history.push(\"/login\");\n      } else {\n        this.setState({\n          userId: json._id,\n          firstName: json.firstName,\n          lastName: json.lastName,\n          email: json.email\n        });\n      }\n    });\n  }\n\n  render() {\n    this.getUserOrder(); // console.log(this.state);\n\n    return React.createElement(React.Fragment, null, !this.state.fail ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"CardText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"My Orders\"), this.state.ordersList.map(order => {\n      return React.createElement(\"div\", {\n        className: \"Order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"OrderHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, order.id)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, order.items.map(item => React.createElement(\"div\", {\n        key: item.itemId,\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          margin: \"5px 0\",\n          borderBottom: \"1px solid #cecece\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"odtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, item.itemName), React.createElement(\"div\", {\n        style: {\n          fontSize: \"14px\",\n          color: \"#555\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"Quantity: \", item.quantity), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"$\", item.currentUnitPrice * item.quantity)))))), React.createElement(\"div\", {\n        className: \"OrderFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Ordered On\", \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.formatDate(order.orderDate))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Order Total\", \" \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"$\", this.getOrderTotal(order.id)))));\n    })))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"You have not purchased anything\")) // <React.Fragment>\n    //   <Header />\n    //   <div className=\"Content\">\n    //     <div className=\"Card\">\n    //       <p className=\"CardText\">My Orders</p>\n    //       {this.state.ordersList.map(order => {\n    //         return (\n    //           <div className=\"Order\">\n    //             <div className=\"OrderHeader\">\n    //               <a href=\"#\">{order.id}</a>\n    //             </div>\n    //             <div>\n    //               {order.items.map(item => (\n    //                 <div\n    //                   key={item.itemId}\n    //                   style={{\n    //                     display: \"flex\",\n    //                     alignItems: \"center\",\n    //                     margin: \"5px 0\",\n    //                     borderBottom: \"1px solid #cecece\"\n    //                   }}\n    //                 >\n    //                   {/* <div\n    //                       style={{\n    //                         width: \"80px\",\n    //                         height: \"80px\",\n    //                         overflow: \"hidden\",\n    //                         position: \"relative\"\n    //                       }}\n    //                       className=\"ImageContainer\"\n    //                     >\n    //                       <img\n    //                         style={{\n    //                           maxWidth: \"100%\",\n    //                           maxHeight: \"100%\",\n    //                           position: \"absolute\",\n    //                           left: \"50%\",\n    //                           transform: \"translateX(-50%)\"\n    //                         }}\n    //                         src={item.product.productPic[0].img}\n    //                       />\n    //                     </div> */}\n    //                   <div>\n    //                     <p className=\"odtitle\">{item.itemName}</p>\n    //                     <div\n    //                       style={{\n    //                         fontSize: \"14px\",\n    //                         color: \"#555\",\n    //                         fontWeight: \"bold\"\n    //                       }}\n    //                     >\n    //                       <p>Quantity: {item.quantity}</p>\n    //                       <p>${item.currentUnitPrice * item.quantity}</p>\n    //                     </div>\n    //                   </div>\n    //                 </div>\n    //               ))}\n    //             </div>\n    //             <div className=\"OrderFooter\">\n    //               <p>\n    //                 Ordered On <span>{this.formatDate(order.orderDate)}</span>\n    //               </p>\n    //               <p>\n    //                 Order Total <span>${this.getOrderTotal(order.id)}</span>\n    //               </p>\n    //             </div>\n    //           </div>\n    //         );\n    //       })}\n    //     </div>\n    //   </div>\n    // </React.Fragment>\n    ;\n  }\n\n}\n\nexport default AccountOrders;","map":{"version":3,"sources":["/Users/steutama/Documents/Documents/team19/react_app/src/components/AccountProfile/AccountOrders.js"],"names":["React","Component","Button","withRouter","Grid","Header","Icon","Message","AccountOrders","constructor","props","formatDate","date","d","Date","getDate","getMonth","getFullYear","getOrderTotal","id","singleOrder","state","ordersList","find","order","orderTotal","items","forEach","item","currentUnitPrice","quantity","userId","firstName","lastName","email","fail","getUserOrder","fetch","method","credentials","headers","then","response","json","setState","console","log","length","componentDidMount","_id","render","map","itemId","display","alignItems","margin","borderBottom","itemName","fontSize","color","fontWeight","orderDate"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { withRouter } from \"react-router-dom\";\nimport { Grid, Header, Icon, Message } from \"semantic-ui-react\";\nimport \"./AccountOrder.css\";\n\nclass AccountOrders extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: null,\n      firstName: \"default\",\n      lastName: \"default\",\n      email: \"default\",\n      fail: false,\n      ordersList: []\n    };\n  }\n\n  getUserOrder() {\n    // console.log(this.state.userId);\n    fetch(\"http://localhost:3001/api/orders/\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        userId: this.state.userId\n      }\n    })\n      .then(response => response.json())\n      .then(json => {\n        this.setState({ ordersList: json });\n        console.log(this.state.ordersList.length);\n        // console.log(json.length);\n        // if (json.length > 0) {\n        //   this.setState({ ordersList: json });\n        // } else {\n        //   this.setState({ fail: true });\n        // } // console.log(json);\n      });\n  }\n  componentDidMount() {\n    // console.log(this.props.userId);\n    // console.log(this.props.match.params.profileId);\n    fetch(\"http://localhost:3001/api/profile\", {\n      method: \"GET\",\n      credentials: \"include\"\n    })\n      .then(response => response.json())\n      .then(json => {\n        if (json === null) {\n          //   this.props.history.push(\"/login\");\n        } else {\n          this.setState({\n            userId: json._id,\n            firstName: json.firstName,\n            lastName: json.lastName,\n            email: json.email\n          });\n        }\n      });\n  }\n  formatDate = date => {\n    let d = new Date(date);\n    return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n  };\n\n  getOrderTotal = id => {\n    const singleOrder = this.state.ordersList.find(order => order.id === id);\n    let orderTotal = 0;\n    singleOrder.items.forEach(item => {\n      //   console.log(item.quantity);\n      orderTotal = orderTotal + item.currentUnitPrice * item.quantity;\n    });\n\n    return orderTotal;\n  };\n  render() {\n    this.getUserOrder();\n    // console.log(this.state);\n    return (\n      <>\n        {!this.state.fail ? (\n          <React.Fragment>\n            <Header />\n            <div className=\"Content\">\n              <div className=\"Card\">\n                <p className=\"CardText\">My Orders</p>\n\n                {this.state.ordersList.map(order => {\n                  return (\n                    <div className=\"Order\">\n                      <div className=\"OrderHeader\">\n                        <a href=\"#\">{order.id}</a>\n                      </div>\n                      <div>\n                        {order.items.map(item => (\n                          <div\n                            key={item.itemId}\n                            style={{\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              margin: \"5px 0\",\n                              borderBottom: \"1px solid #cecece\"\n                            }}\n                          >\n                            {/* <div\n                                style={{\n                                  width: \"80px\",\n                                  height: \"80px\",\n                                  overflow: \"hidden\",\n                                  position: \"relative\"\n                                }}\n                                className=\"ImageContainer\"\n                              >\n                                <img\n                                  style={{\n                                    maxWidth: \"100%\",\n                                    maxHeight: \"100%\",\n                                    position: \"absolute\",\n                                    left: \"50%\",\n                                    transform: \"translateX(-50%)\"\n                                  }}\n                                  src={item.product.productPic[0].img}\n                                />\n                              </div> */}\n                            <div>\n                              <p className=\"odtitle\">{item.itemName}</p>\n                              <div\n                                style={{\n                                  fontSize: \"14px\",\n                                  color: \"#555\",\n                                  fontWeight: \"bold\"\n                                }}\n                              >\n                                <p>Quantity: {item.quantity}</p>\n                                <p>${item.currentUnitPrice * item.quantity}</p>\n                              </div>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                      <div className=\"OrderFooter\">\n                        <p>\n                          Ordered On{\" \"}\n                          <span>{this.formatDate(order.orderDate)}</span>\n                        </p>\n                        <p>\n                          Order Total{\" \"}\n                          <span>${this.getOrderTotal(order.id)}</span>\n                        </p>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </React.Fragment>\n        ) : (\n          <h1>You have not purchased anything</h1>\n        )}\n      </>\n      // <React.Fragment>\n      //   <Header />\n      //   <div className=\"Content\">\n      //     <div className=\"Card\">\n      //       <p className=\"CardText\">My Orders</p>\n\n      //       {this.state.ordersList.map(order => {\n      //         return (\n      //           <div className=\"Order\">\n      //             <div className=\"OrderHeader\">\n      //               <a href=\"#\">{order.id}</a>\n      //             </div>\n      //             <div>\n      //               {order.items.map(item => (\n      //                 <div\n      //                   key={item.itemId}\n      //                   style={{\n      //                     display: \"flex\",\n      //                     alignItems: \"center\",\n      //                     margin: \"5px 0\",\n      //                     borderBottom: \"1px solid #cecece\"\n      //                   }}\n      //                 >\n      //                   {/* <div\n      //                       style={{\n      //                         width: \"80px\",\n      //                         height: \"80px\",\n      //                         overflow: \"hidden\",\n      //                         position: \"relative\"\n      //                       }}\n      //                       className=\"ImageContainer\"\n      //                     >\n      //                       <img\n      //                         style={{\n      //                           maxWidth: \"100%\",\n      //                           maxHeight: \"100%\",\n      //                           position: \"absolute\",\n      //                           left: \"50%\",\n      //                           transform: \"translateX(-50%)\"\n      //                         }}\n      //                         src={item.product.productPic[0].img}\n      //                       />\n      //                     </div> */}\n      //                   <div>\n      //                     <p className=\"odtitle\">{item.itemName}</p>\n      //                     <div\n      //                       style={{\n      //                         fontSize: \"14px\",\n      //                         color: \"#555\",\n      //                         fontWeight: \"bold\"\n      //                       }}\n      //                     >\n      //                       <p>Quantity: {item.quantity}</p>\n      //                       <p>${item.currentUnitPrice * item.quantity}</p>\n      //                     </div>\n      //                   </div>\n      //                 </div>\n      //               ))}\n      //             </div>\n      //             <div className=\"OrderFooter\">\n      //               <p>\n      //                 Ordered On <span>{this.formatDate(order.orderDate)}</span>\n      //               </p>\n      //               <p>\n      //                 Order Total <span>${this.getOrderTotal(order.id)}</span>\n      //               </p>\n      //             </div>\n      //           </div>\n      //         );\n      //       })}\n      //     </div>\n      //   </div>\n      // </React.Fragment>\n    );\n  }\n}\n\nexport default AccountOrders;\n"]},"metadata":{},"sourceType":"module"}