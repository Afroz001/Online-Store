{"ast":null,"code":"var _jsxFileName = \"/Users/steutama/Documents/Documents/team19/react_app/src/components/Register/Register.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Register.css\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"default\",\n      password: \"default\",\n      firstName: \"default\",\n      lastName: \"default\",\n      fail: false\n    };\n  }\n\n  handleRegister() {\n    fetch(\"http://localhost:3001/api/users/register\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        this.props.history.push(\"/login\");\n      } else {\n        this.setState({\n          fail: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"paper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Sign up\"), React.createElement(\"form\", {\n      className: \"form\",\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoComplete: \"fname\",\n      name: \"firstName\",\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"firstName\",\n      label: \"First Name\",\n      autoFocus: true,\n      onChange: e => {\n        this.setState({\n          firstName: e.target.value.toString()\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"lastName\",\n      label: \"Last Name\",\n      name: \"lastName\",\n      autoComplete: \"lname\",\n      onChange: e => {\n        this.setState({\n          lastName: e.target.value.toString()\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      onChange: e => {\n        this.setState({\n          email: e.target.value.toString()\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      onChange: e => {\n        this.setState({\n          password: e.target.value.toString()\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(Button, {\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: \"submit\",\n      onClick: () => {\n        this.handleRegister();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Sign Up\"), this.state.fail && React.createElement(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Error\"))));\n  }\n\n}\n\nexport default withRouter(Register);","map":{"version":3,"sources":["/Users/steutama/Documents/Documents/team19/react_app/src/components/Register/Register.js"],"names":["React","Component","Button","TextField","Grid","Typography","Container","withRouter","Register","constructor","props","state","email","password","firstName","lastName","fail","handleRegister","fetch","method","headers","Accept","credentials","body","JSON","stringify","then","res","status","history","push","setState","render","e","target","value","toString","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Register.css\";\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"default\",\n      password: \"default\",\n      firstName: \"default\",\n      lastName: \"default\",\n      fail: false\n    };\n  }\n\n  handleRegister() {\n    fetch(\"http://localhost:3001/api/users/register\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        this.props.history.push(\"/login\");\n      } else {\n        this.setState({\n          fail: true\n        });\n      }\n    });\n  }\n\n  render() {\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className=\"paper\">\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className=\"form\" noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  onChange={e => {\n                    this.setState({\n                      firstName: e.target.value.toString()\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  onChange={e => {\n                    this.setState({\n                      lastName: e.target.value.toString()\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={e => {\n                    this.setState({\n                      email: e.target.value.toString()\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={e => {\n                    this.setState({\n                      password: e.target.value.toString()\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}></Grid>\n            </Grid>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"submit\"\n              onClick={() => {\n                this.handleRegister();\n              }}\n            >\n              Sign Up\n            </Button>\n            {this.state.fail && <div style={{ color: \"red\" }}>Error</div>}\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(Register);\n"]},"metadata":{},"sourceType":"module"}