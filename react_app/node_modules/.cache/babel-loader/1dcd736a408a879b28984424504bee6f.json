{"ast":null,"code":"var _jsxFileName = \"/Users/steutama/Documents/Documents/team19/react_app/src/components/CheckoutComponent/CheckoutComponent.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport \"./CheckoutComponent.css\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport { CLEAR_CART } from \"../../redux/actions\";\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nclass CheckoutComponent extends Component {\n  constructor() {\n    super();\n    this.totalCost = this.totalCost.bind(this);\n    this.thankYouRedirect = this.thankYouRedirect.bind(this);\n    this.cartDisplayState = this.cartDisplayState.bind(this);\n  }\n\n  totalCost() {\n    return this.props.cart.reduce((a, b) => a + (b[\"price\"] * b[\"count\"] || 0), 0);\n  }\n\n  thankYouRedirect() {\n    this.props.dispatch(CLEAR_CART());\n    alert(\"Thanks for shopping with us!\");\n    this.props.history.push(\"/\");\n  }\n\n  cartDisplayState() {\n    return this.props.cart.length <= 0 ? \"none\" : \"flex\";\n  }\n\n  handleCheckOut() {\n    fetch(\"http://localhost:3001/api/orders\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        items: this.props.cart\n      })\n    }).then(res => {\n      if (res.status === 201) {\n        this.thankYouRedirect();\n      }\n    });\n  }\n\n  render() {\n    console.log(this.props.cart);\n    const checkoutButtons = {\n      \"font-family\": '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n      \"font-size\": \"small\",\n      \"padding-left\": \"0\",\n      \"padding-right\": \"2\",\n      \"justify-content\": \"left\",\n      \"min-width\": \"0\",\n      \"text-transform\": \"capitalize\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.props.cart.map(item => {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"checkoutImages\",\n        src: item.imageUrls,\n        alt: \"eet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(CardContent, {\n        component: \"span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, item.name), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Quantity: \", item.count), React.createElement(\"span\", {\n        className: \"checkoutPricing\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"$\", item.count * item.price), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: checkoutButtons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Add\"), React.createElement(Button, {\n        style: checkoutButtons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Remove\"), React.createElement(Button, {\n        style: checkoutButtons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Delete\")))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }), React.createElement(\"div\", {\n      style: {\n        display: this.cartDisplayState()\n      },\n      className: \"checkoutPricing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Total: $\", this.totalCost())), React.createElement(\"div\", {\n      style: {\n        display: this.cartDisplayState(),\n        clear: \"right\"\n      },\n      className: \"checkoutButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        this.handleCheckOut(); //   this.thankYouRedirect;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Buy It\")));\n  }\n\n}\n\nexport default connect(mapStateToProps)(CheckoutComponent);","map":{"version":3,"sources":["/Users/steutama/Documents/Documents/team19/react_app/src/components/CheckoutComponent/CheckoutComponent.js"],"names":["React","Component","Fragment","Card","CardContent","Typography","connect","Divider","Button","CLEAR_CART","mapStateToProps","state","cart","CheckoutComponent","constructor","totalCost","bind","thankYouRedirect","cartDisplayState","props","reduce","a","b","dispatch","alert","history","push","length","handleCheckOut","fetch","method","headers","Accept","credentials","body","JSON","stringify","items","then","res","status","render","console","log","checkoutButtons","map","item","imageUrls","name","count","price","display","clear"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport \"./CheckoutComponent.css\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport { CLEAR_CART } from \"../../redux/actions\";\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nclass CheckoutComponent extends Component {\n  constructor() {\n    super();\n    this.totalCost = this.totalCost.bind(this);\n    this.thankYouRedirect = this.thankYouRedirect.bind(this);\n    this.cartDisplayState = this.cartDisplayState.bind(this);\n  }\n\n  totalCost() {\n    return this.props.cart.reduce(\n      (a, b) => a + (b[\"price\"] * b[\"count\"] || 0),\n      0\n    );\n  }\n\n  thankYouRedirect() {\n    this.props.dispatch(CLEAR_CART());\n    alert(\"Thanks for shopping with us!\");\n    this.props.history.push(\"/\");\n  }\n\n  cartDisplayState() {\n    return this.props.cart.length <= 0 ? \"none\" : \"flex\";\n  }\n\n  handleCheckOut() {\n    fetch(\"http://localhost:3001/api/orders\", {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        items: this.props.cart\n      })\n    }).then(res => {\n      if (res.status === 201) {\n        this.thankYouRedirect();\n      }\n    });\n  }\n\n  render() {\n    console.log(this.props.cart);\n\n    const checkoutButtons = {\n      \"font-family\":\n        '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif',\n      \"font-size\": \"small\",\n      \"padding-left\": \"0\",\n      \"padding-right\": \"2\",\n      \"justify-content\": \"left\",\n      \"min-width\": \"0\",\n      \"text-transform\": \"capitalize\"\n    };\n\n    return (\n      <div>\n        {this.props.cart.map(item => {\n          return (\n            <Fragment>\n              <Card>\n                <img\n                  className=\"checkoutImages\"\n                  src={item.imageUrls}\n                  alt=\"eet\"\n                />\n                <CardContent component=\"span\">\n                  <Typography variant=\"h5\">{item.name}</Typography>\n                  <span>Quantity: {item.count}</span>\n                  <span className=\"checkoutPricing\">\n                    ${item.count * item.price}\n                  </span>\n                  <div>\n                    <Button style={checkoutButtons}>Add</Button>\n                    <Button style={checkoutButtons}>Remove</Button>\n                    <Button style={checkoutButtons}>Delete</Button>\n                  </div>\n                </CardContent>\n              </Card>\n              <Divider />\n            </Fragment>\n          );\n        })}\n\n        <div\n          style={{ display: this.cartDisplayState() }}\n          className=\"checkoutPricing\"\n        >\n          <Typography variant={\"subtitle1\"}>\n            Total: ${this.totalCost()}\n          </Typography>\n        </div>\n        <div\n          style={{ display: this.cartDisplayState(), clear: \"right\" }}\n          className=\"checkoutButton\"\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              this.handleCheckOut();\n              //   this.thankYouRedirect;\n            }}\n          >\n            Buy It\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(CheckoutComponent);\n"]},"metadata":{},"sourceType":"module"}