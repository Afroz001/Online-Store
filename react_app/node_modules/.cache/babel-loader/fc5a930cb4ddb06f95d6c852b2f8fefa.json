{"ast":null,"code":"import _defineProperty from \"/Users/steutama/Documents/Documents/team19/react_app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/steutama/Documents/Documents/team19/react_app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/steutama/Documents/Documents/team19/react_app/src/components/AdminPage/UserTable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Check from \"@material-ui/icons/Check\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport MaterialTable from \"material-table\";\nexport default function UserTable() {\n  const _React$useState = React.useState({\n    columns: [{\n      title: \"Name\",\n      field: \"name\"\n    }, {\n      title: \"Surname\",\n      field: \"surname\"\n    }, {\n      title: \"Birthday\",\n      field: \"birthYear\",\n      type: \"numeric\"\n    }, {\n      title: \"Email\",\n      field: \"email\"\n    }],\n    data: [{\n      name: \"Mehmet\",\n      surname: \"Baran\",\n      birthYear: 1987,\n      email: \"methnemt@gmail.com\"\n    }, {\n      name: \"Zerya Betül\",\n      surname: \"Baran\",\n      birthYear: 2017,\n      email: \"123Serya@gmail.com\"\n    }]\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  return React.createElement(MaterialTable, {\n    icons: {\n      Check: Check,\n      DetailPanel: ChevronRight,\n      Export: SaveAlt,\n      Filter: FilterList,\n      FirstPage: FirstPage,\n      LastPage: LastPage,\n      NextPage: ChevronRight,\n      PreviousPage: ChevronLeft,\n      Search: Search,\n      ThirdStateCheck: Remove\n    },\n    title: \"Users Informations\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/steutama/Documents/Documents/team19/react_app/src/components/AdminPage/UserTable.js"],"names":["React","Search","ViewColumn","SaveAlt","ChevronLeft","ChevronRight","FirstPage","LastPage","Check","FilterList","Remove","MaterialTable","UserTable","useState","columns","title","field","type","data","name","surname","birthYear","email","state","setState","DetailPanel","Export","Filter","NextPage","PreviousPage","ThirdStateCheck","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Check from \"@material-ui/icons/Check\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport Remove from \"@material-ui/icons/Remove\";\n\nimport MaterialTable from \"material-table\";\n\nexport default function UserTable() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: \"Name\", field: \"name\" },\n      { title: \"Surname\", field: \"surname\" },\n      { title: \"Birthday\", field: \"birthYear\", type: \"numeric\" },\n      { title: \"Email\", field: \"email\" }\n    ],\n    data: [\n      {\n        name: \"Mehmet\",\n        surname: \"Baran\",\n        birthYear: 1987,\n        email: \"methnemt@gmail.com\"\n      },\n      {\n        name: \"Zerya Betül\",\n        surname: \"Baran\",\n        birthYear: 2017,\n        email: \"123Serya@gmail.com\"\n      }\n    ]\n  });\n\n  return (\n    <MaterialTable\n      icons={{\n        Check: Check,\n        DetailPanel: ChevronRight,\n        Export: SaveAlt,\n        Filter: FilterList,\n        FirstPage: FirstPage,\n        LastPage: LastPage,\n        NextPage: ChevronRight,\n        PreviousPage: ChevronLeft,\n        Search: Search,\n        ThirdStateCheck: Remove\n      }}\n      title=\"Users Informations\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          })\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}